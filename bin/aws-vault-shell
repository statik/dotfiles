#!/usr/bin/env bash

set -eo pipefail
#
# red='\033[0;31m'
# yellow='\033[0;33m'
# clear='\033[0m'

bold=$(tput bold)
underline=$(tput sgr 0 1)
reset=$(tput sgr0)

purple=$(tput setaf 171)
red=$(tput setaf 1)
green=$(tput setaf 76)
tan=$(tput setaf 3)
blue=$(tput setaf 38)

#
# Headers and  Logging
#

e_header() {
	printf "\n${bold}${purple}==========  %s  ==========${reset}\n" "$@"
}
e_arrow() {
	printf "➜ %s\n$" "$@"
}
e_success() {
	printf "${green}✔ %s${reset}\n" "$@"
}
echo
e_error() {
	printf "${red}✖ %s${reset}\n" "$@" 1>&2
}
e_warning() {
	printf "${tan}➜ %s${reset}\n" "$@" 1>&2
}
e_underline() {
	printf "${underline}${bold}%s${reset}\n" "$@"
}
e_bold() {
	printf "${bold}%s${reset}\n" "$@"
}
e_note() {
	printf "${underline}${bold}${blue}Note:${reset}  ${blue}%s${reset}\n" "$@"
}

function usage() {
	e_bold "$USAGE"
	e_note "$DESCRIPTION"
}

export USAGE='aws-vault-shell <profile name>'
# shellcheck disable=SC2016
export DESCRIPTION='

  Uses aws-vault to connect to AWS-SSO and run a subshell with temporary keys

  Dependencies: requires aws-vault 6.0 or lataer to be installed.

  Add something like this to your .bashrc or .zshrc to get a helpful reminder

  if [ -n "${AWS_VAULT}" ] ; then
     echo -e "$(tput setab 1)WARNING: working in aws-vault env ${AWS_VAULT}$(tput sgr0)"
     export PS1="$(tput setab 5)<<${AWS_VAULT}>>$(tput sgr0) ${PS1}";
  fi;
'

type aws-vault >/dev/null 2>&1 || {
	e_error "Error: aws-vault cli must be installed (try brew install aws-vault)"
	usage
	exit 1
}

AWS_PROFILE_NAME=${1:-SandboxSSO}
AWS_ASSUME_ROLE_TTL=${2:-1h}
aws-vault exec "$AWS_PROFILE_NAME" --duration "$AWS_ASSUME_ROLE_TTL" "$SHELL"
